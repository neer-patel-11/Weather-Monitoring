<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Weather Monitoring</title>
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
  <h1>Real-Time Weather Monitoring</h1>

  <!-- Dropdown to select city -->
  <label for="city">Choose city:</label>
  <select id="city" onchange="fetchWeatherData()">
    <option value="Delhi" selected>Delhi</option>
    <option value="Mumbai">Mumbai</option>
    <option value="Chennai">Chennai</option>
    <option value="Bangalore">Bangalore</option>
    <option value="Kolkata">Kolkata</option>
    <option value="Hyderabad">Hyderabad</option>
  </select>

  <!-- Temperature unit switch -->
  <label for="unit">Choose temperature unit:</label>
  <select id="unit" onchange="switchUnit()">
    <option value="celsius" selected>Celsius</option>
    <option value="kelvin">Kelvin</option>
  </select>

  <!-- API call interval input -->
  <label for="interval">Set API call interval (minutes):</label>
  <input type="number" id="interval" value="5" min="1" onchange="setAPICallInterval()">

  <div class="weather-container">
    <!-- This container will display weather data for the selected city -->
    <div class="city" id="city-weather">
      <h2 id="city-name">City Name</h2>
      <p>Main Weather: <span id="main-weather"></span></p>
      <p>Temperature: <span id="temp" data-celsius="0"></span></p>
      <p>Feels Like: <span id="feels_like" data-celsius="0"></span></p>
      <p id="last-updated"></p>
    </div>
  </div>

  <h2>Daily Weather Summary</h2>
  <div class="summary-container">
    <!-- This container will display the daily summary for the selected city -->
    <div class="summary" id="city-summary">
      <h3 id="summary-city-name">City Summary</h3>
      <p>Average Temperature: <span id="avg-temp"></span></p>
      <p>Maximum Temperature: <span id="max-temp"></span></p>
      <p>Minimum Temperature: <span id="min-temp"></span></p>
      <p>Dominant Weather: <span id="dominant-weather"></span></p>
    </div>
  </div>

  <script>
    let apiInterval;

    // Function to convert Celsius to Kelvin
    function convertToKelvin(tempCelsius) {
      return (parseFloat(tempCelsius) + 273.15).toFixed(2);
    }

    // Function to switch between Celsius and Kelvin
    function switchUnit() {
      const unit = document.getElementById('unit').value;
      const temp = document.getElementById('temp');
      const feelsLike = document.getElementById('feels_like');

      const tempCelsius = temp.dataset.celsius;
      temp.textContent = unit === 'kelvin' 
        ? convertToKelvin(tempCelsius) + ' K' 
        : tempCelsius + ' °C';

      const feelsLikeCelsius = feelsLike.dataset.celsius;
      feelsLike.textContent = unit === 'kelvin' 
        ? convertToKelvin(feelsLikeCelsius) + ' K' 
        : feelsLikeCelsius + ' °C';
    }

    // Function to fetch weather data for the selected city
    function fetchWeatherData() {
      const city = document.getElementById('city').value;
      fetch(`/api/weather?city=${city}`) // Pass city as a query parameter
        .then(response => response.json())
        .then(data => {
          if (data.weatherData && data.summaries) {
            const weather = data.weatherData[0];
            const summary = data.summaries[0];

            // Update the weather details in the DOM
            document.getElementById('city-name').textContent = weather.city;
            const tempElement = document.getElementById('temp');
            const feelsLikeElement = document.getElementById('feels_like');
            const lastUpdatedElement = document.getElementById('last-updated');

            tempElement.dataset.celsius = weather.temp;
            tempElement.textContent = weather.temp + ' °C';
            feelsLikeElement.dataset.celsius = weather.feels_like;
            feelsLikeElement.textContent = weather.feels_like + ' °C';
            lastUpdatedElement.textContent = 'Last Updated: ' + new Date(weather.dt * 1000).toLocaleTimeString();

            // Update the summary details in the DOM
            document.getElementById('summary-city-name').textContent = summary.city + ' - ' + summary.date;
            document.getElementById('avg-temp').textContent = summary.avgTemp.toFixed(2) + ' °C';
            document.getElementById('max-temp').textContent = summary.maxTemp + ' °C';
            document.getElementById('min-temp').textContent = summary.minTemp + ' °C';
            document.getElementById('dominant-weather').textContent = summary.dominantWeather;
          }
          switchUnit()
        })
        .catch(error => console.error('Error fetching weather data:', error));
    }

    // Function to set the API call interval
    function setAPICallInterval() {
      clearInterval(apiInterval);
      const interval = document.getElementById('interval').value * 60 * 1000; // Convert to milliseconds
      apiInterval = setInterval(fetchWeatherData, interval);
    }

    // Initialize by fetching weather data for the default city (Delhi)
    fetchWeatherData();
    setAPICallInterval();
  </script>
</body>
</html>
